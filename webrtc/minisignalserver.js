import{pushLogs,CONST_STRINGS}from'./utils.js';let listOfUsers={},listOfRooms={},adminSocket;function isAdminAuthorized(p,cfg){if(!p||!p.adminUserName||!p.adminPassword)return false;return p.adminUserName===cfg.adminUserName&&p.adminPassword===cfg.adminPassword}let ScalableBroadcast;function signaling_server(s,cfg){cfg=cfg||{};onConnection(s);function appendUser(s,p){try{let e=p.extra;let hparams=s.handshake.query;if(hparams.extra){try{if(typeof hparams.extra==='string'){hparams.extra=JSON.parse(hparams.extra)}e=hparams.extra}catch(er){e=hparams.extra}}listOfUsers[s.userid]={socket:s,connectedWith:{},extra:e||{},admininfo:{},socketMessageEvent:hparams.socketMessageEvent||'',socketCustomEvent:hparams.socketCustomEvent||''}}catch(e){pushLogs(cfg,'appendUser',e)}sendToAdmin()}function sendToAdmin(a){if(cfg.enableAdmin!==true){return}try{if(adminSocket){let u=[];cfg.enableAdmin===true&&Object.keys(listOfUsers).forEach(function(uid){try{let item=listOfUsers[uid];if(!item)return;if(!item.connectedWith){item.connectedWith={}}if(!item.socket){item.socket={}}u.push({userid:uid,admininfo:item.socket.admininfo||'',connectedWith:Object.keys(item.connectedWith)}) }catch(e){pushLogs(cfg,'admin.user-looper',e)}});let sbu=0;if(ScalableBroadcast&&ScalableBroadcast._){sbu=ScalableBroadcast._.getUsers()}adminSocket.emit('admin',{newUpdates:!a,listOfRooms:!!a?listOfRooms:[],listOfUsers:Object.keys(listOfUsers).length,scalableBroadcastUsers:sbu.length})}}catch(e){pushLogs(cfg,'admin',e)}}function handleAdminSocket(s,p){if(cfg.enableAdmin!==true||!p.adminUserName||!p.adminPassword){s.emit('admin',{error:'Please pass "adminUserName" and "adminPassword" via socket.io parameters.'});pushLogs(cfg,'invalid-admin',{message:CONST_STRINGS.INVALID_ADMIN_CREDENTIAL,stack:'name: '+p.adminUserName+'\n'+'password: '+p.adminPassword});s.disconnect();return}if(!isAdminAuthorized(p,cfg)){s.emit('admin',{error:'Invalid admin username or password.'});pushLogs(cfg,'invalid-admin',{message:CONST_STRINGS.INVALID_ADMIN_CREDENTIAL,stack:'name: '+p.adminUserName+'\n'+'password: '+p.adminPassword});s.disconnect();return}s.emit('admin',{connected:true});adminSocket=s;s.on('admin',function(m,cb){if(!isAdminAuthorized(p,cfg)){s.emit('admin',{error:'Invalid admin username or password.'});pushLogs(cfg,'invalid-admin',{message:CONST_STRINGS.INVALID_ADMIN_CREDENTIAL,stack:'name: '+p.adminUserName+'\n'+'password: '+p.adminPassword});s.disconnect();return}cb=cb||function(){};if(m.all===true){sendToAdmin(true)}if(m.userinfo===true&&m.userid){try{let u=listOfUsers[m.userid];if(u){cb(u.socket.admininfo||{})}else{cb({error:CONST_STRINGS.USERID_NOT_AVAILABLE})}}catch(e){pushLogs(cfg,'userinfo',e)}}if(m.clearLogs===true){pushLogs(cfg,'','',cb)}if(m.deleteUser===true){try{let u=listOfUsers[m.userid];if(u){if(u.socket.owner){}u.socket.disconnect()}cb(true)}catch(e){pushLogs(cfg,'deleteUser',e);cb(false)}}if(m.deleteRoom===true){try{let r=listOfRooms[m.roomid];if(r){let participants=r.participants;delete listOfRooms[m.roomid];participants.forEach(function(uid){let u=listOfUsers[uid];if(u){u.socket.disconnect()}})}cb(true)}catch(e){pushLogs(cfg,'deleteRoom',e);cb(false)}}})}function onConnection(s){let p=s.handshake.query;if(!p.userid){p.userid=(Math.random()*100).toString().replace('.','')}if(!p.sessionid){p.sessionid=(Math.random()*100).toString().replace('.','')}if(p.extra){try{p.extra=JSON.parse(p.extra)}catch(e){p.extra={}}}else{p.extra={}}let sme=p.msgEvent||'RTCMultiConnection-Message';p.socketMessageEvent=sme;let aces=p.autoCloseEntireSession===true||p.autoCloseEntireSession==='true';let sid=p.sessionid;let mpa=parseInt(p.maxParticipantsAllowed||1000)||1000;let esb=p.enableScalableBroadcast===true||p.enableScalableBroadcast==='true';if(p.userid==='admin'){handleAdminSocket(s,p);return}if(esb===true){try{if(!ScalableBroadcast){ScalableBroadcast=require('./Scalable-Broadcast.js')}ScalableBroadcast._=ScalableBroadcast(cfg,s,p.maxRelayLimitPerUser)}catch(e){pushLogs(cfg,'ScalableBroadcast',e)}}if(!!listOfUsers[p.userid]){let useridAlreadyTaken=p.userid;p.userid=(Math.random()*1000).toString().replace('.','');s.emit('userid-already-taken',useridAlreadyTaken,p.userid);return}s.userid=p.userid;appendUser(s,p);s.on('extra-data-updated',function(extra){try{if(!listOfUsers[s.userid])return;if(listOfUsers[s.userid].socket.admininfo){listOfUsers[s.userid].socket.admininfo.extra=extra}listOfUsers[s.userid].extra=extra;try{for(let u in listOfUsers[s.userid].connectedWith){try{listOfUsers[u].socket.emit('extra-data-updated',s.userid,extra)}catch(e){pushLogs(cfg,'extra-data-updated.connectedWith',e)}}}catch(e){pushLogs(cfg,'extra-data-updated.connectedWith',e)}if(!s.admininfo){sendToAdmin();return}let roomid=s.admininfo.sessionid;if(roomid&&listOfRooms[roomid]){if(s.userid==listOfRooms[roomid].owner){listOfRooms[roomid].extra=extra}listOfRooms[roomid].participants.forEach(function(pid){try{let u=listOfUsers[pid];if(!u){return}u.socket.emit('extra-data-updated',s.userid,extra)}catch(e){pushLogs(cfg,'extra-data-updated.participants',e)}})}}catch(e){pushLogs(cfg,'extra-data-updated',e)}sendToAdmin()});s.on('get-remote-user-extra-data',function(uid,cb){cb=cb||function(){};if(!uid||!listOfUsers[uid]){cb(CONST_STRINGS.USERID_NOT_AVAILABLE);return}cb(listOfUsers[uid].extra)});let dontDuplicateListeners={};s.on('set-custom-socket-event-listener',function(e){if(dontDuplicateListeners[e])return;dontDuplicateListeners[e]=e;s.on(e,function(m){try{s.broadcast.emit(e,m)}catch(e){}})});s.on('changed-uuid',function(uid,cb){cb=cb||function(){};try{if(listOfUsers[s.userid]&&listOfUsers[s.userid].socket.userid==s.userid){if(uid===s.userid)return;let oldUserId=s.userid;listOfUsers[uid]=listOfUsers[oldUserId];listOfUsers[uid].socket.userid=s.userid=uid;delete listOfUsers[oldUserId];cb();return}s.userid=uid;appendUser(s,p);cb()}catch(e){pushLogs(cfg,'changed-uuid',e)}});s.on('set-password',function(pass,cb){try{cb=cb||function(){};if(!s.admininfo){cb(null,null,CONST_STRINGS.DID_NOT_JOIN_ANY_ROOM);return}let roomid=s.admininfo.sessionid;if(listOfRooms[roomid]&&listOfRooms[roomid].owner==s.userid){listOfRooms[roomid].password=pass;cb(true,roomid,null)}else{cb(false,roomid,CONST_STRINGS.ROOM_PERMISSION_DENIED)}}catch(e){pushLogs(cfg,'set-password',e)}});s.on('disconnect-with',function(uid,cb){try{if(listOfUsers[s.userid]&&listOfUsers[s.userid].connectedWith[uid]){delete listOfUsers[s.userid].connectedWith[uid];s.emit('user-disconnected',uid);sendToAdmin()}if(!listOfUsers[uid])return cb();if(listOfUsers[uid].connectedWith[s.userid]){delete listOfUsers[uid].connectedWith[s.userid];listOfUsers[uid].socket.emit('user-disconnected',s.userid);sendToAdmin()}cb()}catch(e){pushLogs(cfg,'disconnect-with',e)}});s.on('close-entire-session',function(cb){try{if(!cb||typeof cb!=='function'){cb=function(){}}let u=listOfUsers[s.userid];if(!u)return cb(false,CONST_STRINGS.USERID_NOT_AVAILABLE);if(!u.roomid)return cb(false,CONST_STRINGS.ROOM_NOT_AVAILABLE);if(!s.admininfo)return cb(false,CONST_STRINGS.INVALID_SOCKET);let r=listOfRooms[u.roomid];if(!r)return cb(false,CONST_STRINGS.ROOM_NOT_AVAILABLE);if(r.owner!==u.userid)return cb(false,CONST_STRINGS.ROOM_PERMISSION_DENIED);aces=true;closeOrShiftRoom();cb(true)}catch(e){pushLogs(cfg,'close-entire-session',e)}});s.on('check-presence',function(roomid,cb){try{if(!listOfRooms[roomid]||!listOfRooms[roomid].participants.length){cb(false,roomid,{_room:{isFull:false,isPasswordProtected:false}})}else{let extra=listOfRooms[roomid].extra;if(typeof extra!=='object'||!extra){extra={value:extra}}extra._room={isFull:listOfRooms[roomid].participants.length>=listOfRooms[roomid].maxParticipantsAllowed,isPasswordProtected:listOfRooms[roomid].password&&listOfRooms[roomid].password.toString().replace(/ /g,'').length};cb(true,roomid,extra)}}catch(e){pushLogs(cfg,'check-presence',e)}});function onMessageCallback(m){try{if(!listOfUsers[m.sender]){s.emit('user-not-found',m.sender);return}if(!m.message.userLeft&&!listOfUsers[m.sender].connectedWith[m.remoteUserId]&&!!listOfUsers[m.remoteUserId]){listOfUsers[m.sender].connectedWith[m.remoteUserId]=listOfUsers[m.remoteUserId].socket;listOfUsers[m.sender].socket.emit('user-connected',m.remoteUserId);if(!listOfUsers[m.remoteUserId]){listOfUsers[m.remoteUserId]={socket:null,connectedWith:{},extra:{},admininfo:{}}}listOfUsers[m.remoteUserId].connectedWith[m.sender]=s;if(listOfUsers[m.remoteUserId].socket){listOfUsers[m.remoteUserId].socket.emit('user-connected',m.sender)}sendToAdmin()}if(listOfUsers[m.sender]&&listOfUsers[m.sender].connectedWith[m.remoteUserId]&&listOfUsers[s.userid]){m.extra=listOfUsers[s.userid].extra;listOfUsers[m.sender].connectedWith[m.remoteUserId].emit(sme,m);sendToAdmin()}}catch(e){pushLogs(cfg,'onMessageCallback',e)}}function joinARoom(m){try{if(!s.admininfo||!s.admininfo.sessionid)return;let roomid=s.admininfo.sessionid;if(!listOfRooms[roomid])return;if(listOfRooms[roomid].participants.length>=listOfRooms[roomid].maxParticipantsAllowed&&listOfRooms[roomid].participants.indexOf(s.userid)===-1){return}if(listOfRooms[roomid].session&&(listOfRooms[roomid].session.oneway===true||listOfRooms[roomid].session.broadcast===true)){let owner=listOfRooms[roomid].owner;if(listOfUsers[owner]){m.remoteUserId=owner;if(esb===false){listOfUsers[owner].socket.emit(sme,m)}}return}if(esb===false){listOfRooms[roomid].participants.forEach(function(pid){if(pid===s.userid||!listOfUsers[pid])return;let u=listOfUsers[pid];m.remoteUserId=pid;u.socket.emit(sme,m)})}}catch(e){pushLogs(cfg,'joinARoom',e)}sendToAdmin()}function appendToRoom(rid,uid){try{if(!listOfRooms[rid]){listOfRooms[rid]={maxParticipantsAllowed:mpa,owner:uid,participants:[uid],extra:{},socketMessageEvent:'',socketCustomEvent:'',identifier:'',session:{audio:true,video:true}}}if(listOfRooms[rid].participants.indexOf(uid)!==-1)return;listOfRooms[rid].participants.push(uid)}catch(e){pushLogs(cfg,'appendToRoom',e)}}function closeOrShiftRoom(){try{if(!s.admininfo){return}let roomid=s.admininfo.sessionid;if(roomid&&listOfRooms[roomid]){if(s.userid===listOfRooms[roomid].owner){if(aces===false&&listOfRooms[roomid].participants.length>1){let fp;listOfRooms[roomid].participants.forEach(function(pid){if(fp||pid===s.userid)return;if(!listOfUsers[pid])return;fp=listOfUsers[pid]});if(fp){listOfRooms[roomid].owner=fp.socket.userid;fp.socket.emit('set-isInitiator-true',roomid);let newParticipantsList=[];listOfRooms[roomid].participants.forEach(function(pid){if(pid!=s.userid){newParticipantsList.push(pid)}});listOfRooms[roomid].participants=newParticipantsList}else{delete listOfRooms[roomid]}}else{delete listOfRooms[roomid]}}else{let newParticipantsList=[];listOfRooms[roomid].participants.forEach(function(pid){if(pid&&pid!=s.userid&&listOfUsers[pid]){newParticipantsList.push(pid)}});listOfRooms[roomid].participants=newParticipantsList}}}catch(e){pushLogs(cfg,'closeOrShiftRoom',e)}}s.on(sme,function(m,cb){if(m.remoteUserId&&m.remoteUserId===s.userid){return}try{if(m.remoteUserId&&m.remoteUserId!=='system'&&m.message.newParticipationRequest){if(esb===true){let u=listOfUsers[m.remoteUserId];if(u){u.socket.emit(sme,m)}if(listOfUsers[s.userid]&&listOfUsers[s.userid].extra.broadcastId){appendToRoom(listOfUsers[s.userid].extra.broadcastId,s.userid)}}else if(listOfRooms[m.remoteUserId]){joinARoom(m);return}}if(m.remoteUserId==='system'){if(m.message.detectPresence){if(m.message.userid===s.userid){cb(false,s.userid);return}cb(!!listOfUsers[m.message.userid],m.message.userid);return}}if(!listOfUsers[m.sender]){listOfUsers[m.sender]={socket:s,connectedWith:{},extra:{},admininfo:{}}}if(false&&m.message.newParticipationRequest){let waitFor=60*10;let invokedTimes=0;(function repeater(){if(typeof s=='undefined'||!listOfUsers[s.userid]){return}invokedTimes++;if(invokedTimes>waitFor){s.emit('user-not-found',m.remoteUserId);return}if(listOfUsers[m.remoteUserId]&&listOfUsers[m.remoteUserId].socket){joinARoom(m);return}setTimeout(repeater,1000)})()}onMessageCallback(m)}catch(e){pushLogs(cfg,'on-socketMessageEvent',e)}});s.on('is-valid-password',function(pass,roomid,cb){try{cb=cb||function(){};if(!pass||!pass.toString().replace(/ /g,'').length){cb(false,roomid,'You did not enter the password.');return}if(!roomid||!roomid.toString().replace(/ /g,'').length){cb(false,roomid,'You did not enter the room-id.');return}if(!listOfRooms[roomid]){cb(false,roomid,CONST_STRINGS.ROOM_NOT_AVAILABLE);return}if(!listOfRooms[roomid].password){cb(false,roomid,'This room do not have any password.');return}if(listOfRooms[roomid].password===pass){cb(true,roomid,false)}else{cb(false,roomid,CONST_STRINGS.INVALID_PASSWORD)}}catch(e){pushLogs('is-valid-password',e)}});s.on('get-public-rooms',function(identifier,cb){try{if(!identifier||!identifier.toString().length||!identifier.toString().replace(/ /g,'').length){cb(null,CONST_STRINGS.PUBLIC_IDENTIFIER_MISSING);return}let rooms=[];Object.keys(listOfRooms).forEach(function(key){let room=listOfRooms[key];if(!room||!room.identifier||!room.identifier.toString().length||room.identifier!==identifier)return;rooms.push({maxParticipantsAllowed:room.maxParticipantsAllowed,owner:room.owner,participants:room.participants,extra:room.extra,session:room.session,sessionid:key,isRoomFull:room.participants.length>=room.maxParticipantsAllowed,isPasswordProtected:!!room.password&&room.password.replace(/ /g,'').length>0})});cb(rooms)}catch(e){pushLogs('get-public-rooms',e)}});s.on('open-room',function(arg,cb){cb=cb||function(){};try{closeOrShiftRoom();if(listOfRooms[arg.sessionid]&&listOfRooms[arg.sessionid].participants.length){cb(false,CONST_STRINGS.ROOM_NOT_AVAILABLE);return}if(esb===true){arg.session.scalable=true;arg.sessionid=arg.extra.broadcastId}if(!listOfUsers[s.userid]){listOfUsers[s.userid]={socket:s,connectedWith:{},extra:arg.extra,admininfo:{},socketMessageEvent:p.socketMessageEvent||'',socketCustomEvent:p.socketCustomEvent||''}}listOfUsers[s.userid].extra=arg.extra;if(arg.session&&(arg.session.oneway===true||arg.session.broadcast===true)){aces=true}}catch(e){pushLogs(cfg,'open-room',e)}appendToRoom(arg.sessionid,s.userid);try{if(esb===true){if(Object.keys(listOfRooms[arg.sessionid]).length===1){listOfRooms[arg.sessionid].owner=s.userid;listOfRooms[arg.sessionid].session=arg.session}}else{listOfRooms[arg.sessionid].owner=s.userid;listOfRooms[arg.sessionid].session=arg.session;listOfRooms[arg.sessionid].extra=arg.extra||{};listOfRooms[arg.sessionid].socketMessageEvent=listOfUsers[s.userid].socketMessageEvent;listOfRooms[arg.sessionid].socketCustomEvent=listOfUsers[s.userid].socketCustomEvent;listOfRooms[arg.sessionid].maxParticipantsAllowed=mpa;if(arg.identifier&&arg.identifier.toString().length){listOfRooms[arg.sessionid].identifier=arg.identifier}try{if(typeof arg.password!=='undefined'&&arg.password.toString().length){listOfRooms[arg.sessionid].password=arg.password}}catch(e){pushLogs(cfg,'open-room.password',e)}}}catch(e){pushLogs(cfg,'open-room',e)}listOfUsers[s.userid].socket.admininfo={sessionid:arg.sessionid,session:arg.session,mediaConstraints:arg.mediaConstraints,sdpConstraints:arg.sdpConstraints,streams:arg.streams,extra:arg.extra};sendToAdmin();try{cb(true)}catch(e){pushLogs(cfg,'open-room',e)}});s.on('join-room',function(arg,cb){cb=cb||function(){};try{closeOrShiftRoom();if(esb===true){arg.session.scalable=true;arg.sessionid=arg.extra.broadcastId}if(!listOfUsers[s.userid]){listOfUsers[s.userid]={socket:s,connectedWith:{},extra:arg.extra,admininfo:{},socketMessageEvent:p.socketMessageEvent||'',socketCustomEvent:p.socketCustomEvent||''}}listOfUsers[s.userid].extra=arg.extra}catch(e){pushLogs(cfg,'join-room',e)}try{if(!listOfRooms[arg.sessionid]){cb(false,CONST_STRINGS.ROOM_NOT_AVAILABLE);return}}catch(e){pushLogs(cfg,'join-room',e)}try{if(listOfRooms[arg.sessionid].password&&listOfRooms[arg.sessionid].password!=arg.password){cb(false,CONST_STRINGS.INVALID_PASSWORD);return}}catch(e){pushLogs(cfg,'join-room.password',e)}try{if(listOfRooms[arg.sessionid].participants.length>=listOfRooms[arg.sessionid].maxParticipantsAllowed){cb(false,CONST_STRINGS.ROOM_FULL);return}}catch(e){pushLogs(cfg,'join-room.ROOM_FULL',e)}appendToRoom(arg.sessionid,s.userid);try{listOfUsers[s.userid].socket.admininfo={sessionid:arg.sessionid,session:arg.session,mediaConstraints:arg.mediaConstraints,sdpConstraints:arg.sdpConstraints,streams:arg.streams,extra:arg.extra}}catch(e){pushLogs(cfg,'join-room',e)}sendToAdmin();try{cb(true)}catch(e){pushLogs(cfg,'join-room',e)}});s.on('disconnect',function(){try{if(s&&s.namespace&&s.namespace.sockets){delete s.namespace.sockets[this.id]}}catch(e){pushLogs(cfg,'disconnect',e)}try{if(listOfUsers[s.userid]){for(let u in listOfUsers[s.userid].connectedWith){listOfUsers[s.userid].connectedWith[u].emit('user-disconnected',s.userid);if(listOfUsers[u]&&listOfUsers[u].connectedWith[s.userid]){delete listOfUsers[u].connectedWith[s.userid];listOfUsers[u].socket.emit('user-disconnected',s.userid)}}}}catch(e){pushLogs(cfg,'disconnect',e)}closeOrShiftRoom();delete listOfUsers[s.userid];if(s.ondisconnect){try{s.ondisconnect()}catch(e){pushLogs('socket.ondisconnect',e)}}sendToAdmin()})}}export default signaling_server;